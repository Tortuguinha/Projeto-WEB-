services:
  database-service:
    container_name: db-container
    image: postgres:18
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=meubanco
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql
    networks:
      - my_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d meubanco"]
      interval: 5s
      timeout: 5s
      retries: 5

  employee-service:
    container_name: employee-service
    build:
      context: ./employee
      dockerfile: Dockerfile
    depends_on:
      database-service:
        condition: service_healthy
    networks:
      - my_network
    env_file:
      - ./employee/.env
    restart: always

  frontend-service:
    container_name: frontend-service
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - my_network
    env_file:
      - ./frontend/.env
    restart: always

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - employee-service
      - frontend-service
    ports:
      - "80:80"
    networks:
      - my_network
    restart: always

networks:
  my_network:
    driver: bridge

volumes:
  pgdata:
